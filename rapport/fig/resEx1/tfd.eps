%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/kewin/octave/td_matLab/rapport/fig/resEx1/tfd.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Jan  6 18:28:12 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 625 481
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/kewin/octave/td_matLab/rapport/fig/resEx1/tfd.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (KÃ©vin Fardel,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan  6 18:28:12 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/GreenA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/BlueA [.057 .0642 .0715 .0787 .086 .0932 .1004 .1077 .1187 .1559 .1932 
  .2305 .2677 .305 .3423 .3795 .4168 .4541 .4914 .5286 .5659 .6032 .6404 
  .6777 .7054 .7172 .7289 .7406 .7524 .7641 .7759 .7876 .7994 .8111 .8229 
  .8346 .8464 .8581 .8698 .8816 .8627 .8254 .7882 .7509 .7136 .6764 .6391 
  .6018 .5645 .5273 .49 .4527 .4155 .3782 .3409 .3037 .2824 .2634 .2444 
  .2254 .2065 .1875 .1685 .1495 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1475 928 M
88 0 V
8834 0 R
-88 0 V
stroke
1391 928 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MRshow
0.500 UL
LTb
1475 2687 M
88 0 V
8834 0 R
-88 0 V
stroke
1391 2687 M
[ [(Helvetica) 120.0 0.0 true true 0 (5)]
] -40.0 MRshow
0.500 UL
LTb
1475 4446 M
88 0 V
8834 0 R
-88 0 V
stroke
1391 4446 M
[ [(Helvetica) 120.0 0.0 true true 0 (10)]
] -40.0 MRshow
0.500 UL
LTb
1475 6204 M
88 0 V
8834 0 R
-88 0 V
stroke
1391 6204 M
[ [(Helvetica) 120.0 0.0 true true 0 (15)]
] -40.0 MRshow
0.500 UL
LTb
1475 7963 M
88 0 V
8834 0 R
-88 0 V
stroke
1391 7963 M
[ [(Helvetica) 120.0 0.0 true true 0 (20)]
] -40.0 MRshow
0.500 UL
LTb
1475 928 M
0 88 V
0 6947 R
0 -88 V
stroke
1475 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (0)]
] -40.0 MCshow
0.500 UL
LTb
3259 928 M
0 88 V
0 6947 R
0 -88 V
stroke
3259 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.1)]
] -40.0 MCshow
0.500 UL
LTb
5044 928 M
0 88 V
0 6947 R
0 -88 V
stroke
5044 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.2)]
] -40.0 MCshow
0.500 UL
LTb
6828 928 M
0 88 V
0 6947 R
0 -88 V
stroke
6828 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.3)]
] -40.0 MCshow
0.500 UL
LTb
8613 928 M
0 88 V
0 6947 R
0 -88 V
stroke
8613 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.4)]
] -40.0 MCshow
0.500 UL
LTb
10397 928 M
0 88 V
0 6947 R
0 -88 V
stroke
10397 788 M
[ [(Helvetica) 120.0 0.0 true true 0 (0.5)]
] -40.0 MCshow
0.500 UL
LTb
0.500 UL
LTb
1475 7963 N
0 -7035 V
8922 0 V
0 7035 V
-8922 0 V
Z stroke
5936 8173 M
[ [(times new roman) 250.0 0.0 true true 0 (Transformee de fourier de la porte sur l'intervalle [0,0.5])]
] -83.3 MCshow
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
1475 928 M
0 5980 V
1510 928 M
0 5969 V
1545 928 M
0 5937 V
1580 928 M
0 5883 V
1614 928 M
0 5808 V
1649 928 M
0 5713 V
1684 928 M
0 5598 V
1719 928 M
0 5464 V
1754 928 M
0 5312 V
1789 928 M
0 5142 V
1824 928 M
0 4956 V
1858 928 M
0 4755 V
1893 928 M
0 4540 V
1928 928 M
0 4313 V
1963 928 M
0 4075 V
1998 928 M
0 3827 V
2033 928 M
0 3571 V
2067 928 M
0 3309 V
2102 928 M
0 3042 V
2137 928 M
0 2772 V
2172 928 M
0 2500 V
2207 928 M
0 2228 V
2242 928 M
0 1958 V
2277 928 M
0 1691 V
2311 928 M
0 1428 V
2346 928 M
0 1171 V
2381 928 M
0 922 V
35 -922 R
0 681 V
35 -681 R
0 451 V
35 -451 R
0 231 V
35 -231 R
0 24 V
34 -24 R
0 171 V
35 -171 R
0 352 V
35 -352 R
0 518 V
35 -518 R
0 669 V
35 -669 R
0 805 V
35 -805 R
0 924 V
35 -924 R
0 1028 V
2799 928 M
0 1115 V
2834 928 M
0 1187 V
2869 928 M
0 1242 V
2904 928 M
0 1281 V
2939 928 M
0 1305 V
2974 928 M
0 1314 V
3008 928 M
0 1309 V
3043 928 M
0 1290 V
3078 928 M
0 1258 V
3113 928 M
0 1214 V
3148 928 M
0 1160 V
3183 928 M
0 1095 V
3218 928 M
0 1020 V
3252 928 M
0 938 V
35 -938 R
0 849 V
stroke 3287 1777 M
35 -849 R
0 754 V
35 -754 R
0 655 V
35 -655 R
0 552 V
35 -552 R
0 446 V
35 -446 R
0 340 V
34 -340 R
0 233 V
35 -233 R
0 128 V
35 -128 R
0 24 V
35 -24 R
0 77 V
35 -77 R
0 173 V
35 -173 R
0 265 V
35 -265 R
0 352 V
34 -352 R
0 432 V
35 -432 R
0 505 V
35 -505 R
0 571 V
35 -571 R
0 629 V
35 -629 R
0 678 V
35 -678 R
0 719 V
34 -719 R
0 751 V
35 -751 R
0 775 V
35 -775 R
0 789 V
35 -789 R
0 795 V
35 -795 R
0 792 V
35 -792 R
0 780 V
35 -780 R
0 761 V
34 -761 R
0 734 V
35 -734 R
0 699 V
35 -699 R
0 658 V
35 -658 R
0 611 V
35 -611 R
0 558 V
35 -558 R
0 501 V
35 -501 R
0 439 V
34 -439 R
0 374 V
35 -374 R
0 306 V
35 -306 R
0 237 V
35 -237 R
0 166 V
35 -166 R
0 95 V
35 -95 R
0 25 V
34 -25 R
0 45 V
35 -45 R
0 112 V
35 -112 R
0 178 V
35 -178 R
0 240 V
35 -240 R
0 298 V
35 -298 R
0 352 V
35 -352 R
0 401 V
34 -401 R
0 445 V
35 -445 R
0 483 V
35 -483 R
0 516 V
35 -516 R
0 543 V
35 -543 R
0 563 V
35 -563 R
0 577 V
35 -577 R
0 584 V
stroke 5100 1512 M
34 -584 R
0 585 V
35 -585 R
0 580 V
35 -580 R
0 568 V
35 -568 R
0 551 V
35 -551 R
0 528 V
35 -528 R
0 500 V
35 -500 R
0 466 V
34 -466 R
0 429 V
35 -429 R
0 387 V
35 -387 R
0 341 V
35 -341 R
0 293 V
35 -293 R
0 242 V
35 -242 R
0 189 V
34 -189 R
0 135 V
35 -135 R
0 81 V
35 -81 R
0 26 V
35 -26 R
0 29 V
35 -29 R
0 82 V
35 -82 R
0 134 V
35 -134 R
0 184 V
34 -184 R
0 231 V
35 -231 R
0 275 V
35 -275 R
0 315 V
35 -315 R
0 352 V
35 -352 R
0 384 V
35 -384 R
0 412 V
35 -412 R
0 435 V
34 -435 R
0 453 V
35 -453 R
0 466 V
35 -466 R
0 474 V
35 -474 R
0 477 V
35 -477 R
0 474 V
35 -474 R
0 467 V
35 -467 R
0 454 V
34 -454 R
0 437 V
35 -437 R
0 415 V
35 -415 R
0 389 V
35 -389 R
0 359 V
35 -359 R
0 325 V
35 -325 R
0 289 V
34 -289 R
0 249 V
35 -249 R
0 207 V
35 -207 R
0 164 V
35 -164 R
0 119 V
35 -119 R
0 73 V
35 -73 R
0 27 V
35 -27 R
0 19 V
34 -19 R
0 64 V
35 -64 R
0 109 V
35 -109 R
0 151 V
35 -151 R
0 192 V
35 -192 R
0 230 V
stroke 6912 1158 M
35 -230 R
0 266 V
35 -266 R
0 298 V
34 -298 R
0 327 V
35 -327 R
0 352 V
35 -352 R
0 373 V
35 -373 R
0 390 V
35 -390 R
0 402 V
35 -402 R
0 410 V
35 -410 R
0 414 V
34 -414 R
0 413 V
35 -413 R
0 408 V
35 -408 R
0 398 V
35 -398 R
0 384 V
35 -384 R
0 366 V
35 -366 R
0 344 V
34 -344 R
0 319 V
35 -319 R
0 290 V
35 -290 R
0 259 V
35 -259 R
0 224 V
35 -224 R
0 188 V
35 -188 R
0 150 V
35 -150 R
0 110 V
34 -110 R
0 70 V
35 -70 R
0 29 V
35 -29 R
0 12 V
35 -12 R
0 53 V
35 -53 R
0 92 V
35 -92 R
0 131 V
35 -131 R
0 168 V
34 -168 R
0 203 V
35 -203 R
0 235 V
35 -235 R
0 265 V
35 -265 R
0 292 V
35 -292 R
0 316 V
35 -316 R
0 336 V
35 -336 R
0 352 V
34 -352 R
0 364 V
35 -364 R
0 372 V
35 -372 R
0 377 V
35 -377 R
0 377 V
35 -377 R
0 373 V
35 -373 R
0 365 V
34 -365 R
0 353 V
35 -353 R
0 338 V
35 -338 R
0 319 V
35 -319 R
0 296 V
35 -296 R
0 270 V
35 -270 R
0 242 V
35 -242 R
0 211 V
34 -211 R
0 178 V
35 -178 R
0 143 V
35 -143 R
0 107 V
stroke 8724 1035 M
35 -107 R
0 69 V
35 -69 R
0 31 V
35 -31 R
0 7 V
35 -7 R
0 45 V
34 -45 R
0 82 V
35 -82 R
0 118 V
35 -118 R
0 153 V
35 -153 R
0 186 V
35 -186 R
0 217 V
35 -217 R
0 246 V
34 -246 R
0 272 V
35 -272 R
0 295 V
35 -295 R
0 314 V
35 -314 R
0 330 V
35 -330 R
0 343 V
35 -343 R
0 352 V
35 -352 R
0 357 V
34 -357 R
0 358 V
35 -358 R
0 355 V
35 -355 R
0 348 V
35 -348 R
0 338 V
35 -338 R
0 324 V
35 -324 R
0 306 V
35 -306 R
0 286 V
34 -286 R
0 262 V
35 -262 R
0 235 V
35 -235 R
0 206 V
35 -206 R
0 175 V
35 -175 R
0 142 V
35 -142 R
0 107 V
35 -107 R
0 71 V
34 -71 R
0 35 V
35 -35 R
0 2 V
35 -2 R
0 39 V
35 -39 R
0 75 V
35 -75 R
0 111 V
35 -111 R
0 145 V
34 -145 R
0 177 V
35 -177 R
0 208 V
35 -208 R
0 237 V
35 -237 R
0 262 V
35 -262 R
0 285 V
35 -285 R
0 305 V
35 -305 R
0 322 V
34 -322 R
0 335 V
35 -335 R
0 344 V
35 -344 R
0 350 V
1.000 UP
stroke
LT1
1475 6908 Circle
1510 6897 Circle
1545 6865 Circle
1580 6811 Circle
1614 6736 Circle
1649 6641 Circle
1684 6526 Circle
1719 6392 Circle
1754 6240 Circle
1789 6070 Circle
1824 5884 Circle
1858 5683 Circle
1893 5468 Circle
1928 5241 Circle
1963 5003 Circle
1998 4755 Circle
2033 4499 Circle
2067 4237 Circle
2102 3970 Circle
2137 3700 Circle
2172 3428 Circle
2207 3156 Circle
2242 2886 Circle
2277 2619 Circle
2311 2356 Circle
2346 2099 Circle
2381 1850 Circle
2416 1609 Circle
2451 1379 Circle
2486 1159 Circle
2521 952 Circle
2555 1099 Circle
2590 1280 Circle
2625 1446 Circle
2660 1597 Circle
2695 1733 Circle
2730 1852 Circle
2765 1956 Circle
2799 2043 Circle
2834 2115 Circle
2869 2170 Circle
2904 2209 Circle
2939 2233 Circle
2974 2242 Circle
3008 2237 Circle
3043 2218 Circle
3078 2186 Circle
3113 2142 Circle
3148 2088 Circle
3183 2023 Circle
3218 1948 Circle
3252 1866 Circle
3287 1777 Circle
3322 1682 Circle
3357 1583 Circle
3392 1480 Circle
3427 1374 Circle
3462 1268 Circle
3496 1161 Circle
3531 1056 Circle
3566 952 Circle
3601 1005 Circle
3636 1101 Circle
3671 1193 Circle
3706 1280 Circle
3740 1360 Circle
3775 1433 Circle
3810 1499 Circle
3845 1557 Circle
3880 1606 Circle
3915 1647 Circle
3949 1679 Circle
3984 1703 Circle
4019 1717 Circle
4054 1723 Circle
4089 1720 Circle
4124 1708 Circle
4159 1689 Circle
4193 1662 Circle
4228 1627 Circle
4263 1586 Circle
4298 1539 Circle
4333 1486 Circle
4368 1429 Circle
4403 1367 Circle
4437 1302 Circle
4472 1234 Circle
4507 1165 Circle
4542 1094 Circle
4577 1023 Circle
4612 953 Circle
4646 973 Circle
4681 1040 Circle
4716 1106 Circle
4751 1168 Circle
4786 1226 Circle
4821 1280 Circle
4856 1329 Circle
4890 1373 Circle
4925 1411 Circle
4960 1444 Circle
4995 1471 Circle
5030 1491 Circle
5065 1505 Circle
5100 1512 Circle
5134 1513 Circle
5169 1508 Circle
5204 1496 Circle
5239 1479 Circle
5274 1456 Circle
5309 1428 Circle
5344 1394 Circle
5378 1357 Circle
5413 1315 Circle
5448 1269 Circle
5483 1221 Circle
5518 1170 Circle
5553 1117 Circle
5587 1063 Circle
5622 1009 Circle
5657 954 Circle
5692 957 Circle
5727 1010 Circle
5762 1062 Circle
5797 1112 Circle
5831 1159 Circle
5866 1203 Circle
5901 1243 Circle
5936 1280 Circle
5971 1312 Circle
6006 1340 Circle
6041 1363 Circle
6075 1381 Circle
6110 1394 Circle
6145 1402 Circle
6180 1405 Circle
6215 1402 Circle
6250 1395 Circle
6285 1382 Circle
6319 1365 Circle
6354 1343 Circle
6389 1317 Circle
6424 1287 Circle
6459 1253 Circle
6494 1217 Circle
6528 1177 Circle
6563 1135 Circle
6598 1092 Circle
6633 1047 Circle
6668 1001 Circle
6703 955 Circle
6738 947 Circle
6772 992 Circle
6807 1037 Circle
6842 1079 Circle
6877 1120 Circle
6912 1158 Circle
6947 1194 Circle
6982 1226 Circle
7016 1255 Circle
7051 1280 Circle
7086 1301 Circle
7121 1318 Circle
7156 1330 Circle
7191 1338 Circle
7226 1342 Circle
7260 1341 Circle
7295 1336 Circle
7330 1326 Circle
7365 1312 Circle
7400 1294 Circle
7435 1272 Circle
7469 1247 Circle
7504 1218 Circle
7539 1187 Circle
7574 1152 Circle
7609 1116 Circle
7644 1078 Circle
7679 1038 Circle
7713 998 Circle
7748 957 Circle
7783 940 Circle
7818 981 Circle
7853 1020 Circle
7888 1059 Circle
7923 1096 Circle
7957 1131 Circle
7992 1163 Circle
8027 1193 Circle
8062 1220 Circle
8097 1244 Circle
8132 1264 Circle
8167 1280 Circle
8201 1292 Circle
8236 1300 Circle
8271 1305 Circle
8306 1305 Circle
8341 1301 Circle
8376 1293 Circle
8410 1281 Circle
8445 1266 Circle
8480 1247 Circle
8515 1224 Circle
8550 1198 Circle
8585 1170 Circle
8620 1139 Circle
8654 1106 Circle
8689 1071 Circle
8724 1035 Circle
8759 997 Circle
8794 959 Circle
8829 935 Circle
8864 973 Circle
8898 1010 Circle
8933 1046 Circle
8968 1081 Circle
9003 1114 Circle
9038 1145 Circle
9073 1174 Circle
9107 1200 Circle
9142 1223 Circle
9177 1242 Circle
9212 1258 Circle
9247 1271 Circle
9282 1280 Circle
9317 1285 Circle
9351 1286 Circle
9386 1283 Circle
9421 1276 Circle
9456 1266 Circle
9491 1252 Circle
9526 1234 Circle
9561 1214 Circle
9595 1190 Circle
9630 1163 Circle
9665 1134 Circle
9700 1103 Circle
9735 1070 Circle
9770 1035 Circle
9805 999 Circle
9839 963 Circle
9874 930 Circle
9909 967 Circle
9944 1003 Circle
9979 1039 Circle
10014 1073 Circle
10048 1105 Circle
10083 1136 Circle
10118 1165 Circle
10153 1190 Circle
10188 1213 Circle
10223 1233 Circle
10258 1250 Circle
10292 1263 Circle
10327 1272 Circle
10362 1278 Circle
0.500 UL
LT2
1475 928 M
8922 0 V
1.000 UP
stroke
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: times new roman Helvetica
